{{/* AWS-specific cilium Helm values*/}}
{{/* https://github.com/giantswarm/cilium-app/blob/main/helm/cilium/values.yaml*/}}
{{- define "awsCiliumHelmValues" }}
provider: capa
image:
  registry: {{ include "awsContainerImageRegistry" $ }}
{{- if eq (required "global.connectivity.cilium.ipamMode is required"  .Values.global.connectivity.cilium.ipamMode) "eni" }}
# https://docs.cilium.io/en/v1.14/network/concepts/routing/#id5
ipam:
  mode: eni
eni:
  enabled: true
  awsReleaseExcessIPs: true
enableIPv4Masquerade: false
tunnel: disabled
cluster:
    # Used by cilium to tag ENIs it creates and be able to filter and clean them up.
    name: {{ include "resource.default.name" $ | quote }}
cni:
  # Use https://github.com/giantswarm/cilium-app/blob/main/helm/cilium/templates/cilium-cni-configmap.yaml
  customConf: true
  configMap: cilium-cni-configuration
cniCustomConf:
  eni:
    firstInterfaceIndex: 1
    securityGroupTags:
      "kubernetes.io/cluster/{{ include "resource.default.name" $ }}": "owned"
      "sigs.k8s.io/cluster-api-provider-aws/association": "secondary"
    subnetTags:
      "sigs.k8s.io/cluster-api-provider-aws/cluster/{{ include "resource.default.name" $ }}": "owned"
      "sigs.k8s.io/cluster-api-provider-aws/association": "secondary"
      "sigs.k8s.io/cluster-api-provider-aws/role": "private"
extraEnv:
  - name: CNI_CONF_NAME
    value: "21-cilium.conflist"
{{- else if eq (required "global.connectivity.cilium.ipamMode is required"  .Values.global.connectivity.cilium.ipamMode) "kubernetes" }}
{{- /* Use default from `cluster` chart */}}
{{- end }}

hubble:
  relay:
    tolerations:
      - key: "node.cluster.x-k8s.io/uninitialized"
        operator: "Exists"
        effect: "NoSchedule"
  ui:
    tolerations:
      - key: "node.cluster.x-k8s.io/uninitialized"
        operator: "Exists"
        effect: "NoSchedule"
defaultPolicies:
  enabled: false
  remove: true

  tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
extraPolicies:
  remove: true

  allowEgressToCoreDNS:
    enabled: false
  allowEgressToProxy:
    enabled: false
    httpProxy: {{ $.Values.global.connectivity.proxy.httpProxy | quote }}
    httpsProxy: {{ $.Values.global.connectivity.proxy.httpsProxy | quote }}
{{- end }}
