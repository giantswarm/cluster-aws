# Auto-generated by helm-values-gen, do not edit!

cluster:
  providerIntegration:
    clusterAnnotationsTemplateName: awsConnectivityLabels
    components:
      systemd:
        timesyncd:
          ntp:
            - 169.254.169.123
    connectivity:
      proxy:
        noProxy:
          templateName: awsNoProxyList
          value:
            - elb.amazonaws.com
            - 169.254.169.254
    controlPlane:
      kubeadmConfig:
        clusterConfiguration:
          apiServer:
            apiAudiences:
              templateName: awsApiServerApiAudiences
            featureGates:
              - enabled: true
                name: CronJobTimeZone
            serviceAccountIssuer:
              clusterDomainPrefix: irsa
        ignition:
          containerLinuxConfig:
            additionalConfig:
              storage:
                filesystems:
                  - mount:
                      device: /dev/xvdc
                      format: xfs
                      label: etcd
                      wipeFilesystem: true
                    name: etcd
                  - mount:
                      device: /dev/xvdd
                      format: xfs
                      label: containerd
                      wipeFilesystem: true
                    name: containerd
                  - mount:
                      device: /dev/xvde
                      format: xfs
                      label: kubelet
                      wipeFilesystem: true
                    name: kubelet
              systemd:
                units:
                  - contents:
                      install:
                        wantedBy:
                          - local-fs-pre.target
                      mount:
                        type: xfs
                        what: /dev/disk/by-label/etcd
                        where: /var/lib/etcd
                      unit:
                        defaultDependencies: false
                        description: etcd volume
                    enabled: true
                    name: var-lib-etcd.mount
                  - contents:
                      install:
                        wantedBy:
                          - local-fs-pre.target
                      mount:
                        type: xfs
                        what: /dev/disk/by-label/kubelet
                        where: /var/lib/kubelet
                      unit:
                        defaultDependencies: false
                        description: kubelet volume
                    enabled: true
                    name: var-lib-kubelet.mount
                  - contents:
                      install:
                        wantedBy:
                          - local-fs-pre.target
                      mount:
                        type: xfs
                        what: /dev/disk/by-label/containerd
                        where: /var/lib/containerd
                      unit:
                        defaultDependencies: false
                        description: containerd volume
                    enabled: true
                    name: var-lib-containerd.mount
      resources:
        infrastructureMachineTemplate:
          group: infrastructure.cluster.x-k8s.io
          kind: AWSMachineTemplate
          version: v1beta1
        infrastructureMachineTemplateSpecTemplateName: controlplane-awsmachinetemplate-spec
    pauseProperties:
      global.connectivity.vpcMode: private
    provider: aws
    resourcesApi:
      bastionResourceEnabled: false
      clusterResourceEnabled: true
      controlPlaneResourceEnabled: true
      infrastructureCluster:
        group: infrastructure.cluster.x-k8s.io
        kind: AWSCluster
        version: v1beta1
      machineHealthCheckResourceEnabled: true
      machinePoolResourcesEnabled: false
      nodePoolKind: MachinePool
global:
  apps:
    awsCloudControllerManager: {}
    awsEbsCsiDriver: {}
    cilium: {}
    coreDns: {}
    verticalPodAutoscalerCrd: {}
  components:
    containerd:
      containerRegistries:
        docker.io:
          - endpoint: registry-1.docker.io
          - endpoint: giantswarm.azurecr.io
  connectivity:
    availabilityZoneUsageLimit: 3
    cilium:
      ipamMode: kubernetes
    dns: {}
    network:
      pods:
        cidrBlocks:
          - 100.64.0.0/12
      services:
        cidrBlocks:
          - 172.31.0.0/16
      vpcCidr: 10.0.0.0/16
    proxy: {}
    subnets:
      - cidrBlocks:
          - availabilityZone: a
            cidr: 10.0.0.0/20
          - availabilityZone: b
            cidr: 10.0.16.0/20
          - availabilityZone: c
            cidr: 10.0.32.0/20
        isPublic: true
      - cidrBlocks:
          - availabilityZone: a
            cidr: 10.0.64.0/18
          - availabilityZone: b
            cidr: 10.0.128.0/18
          - availabilityZone: c
            cidr: 10.0.192.0/18
        isPublic: false
    topology:
      mode: None
    vpcEndpointMode: GiantSwarmManaged
    vpcMode: public
  controlPlane:
    apiMode: public
    apiServerPort: 443
    containerdVolumeSizeGB: 100
    etcdVolumeSizeGB: 100
    instanceType: r6i.xlarge
    kubeletVolumeSizeGB: 100
    machineHealthCheck:
      enabled: true
      maxUnhealthy: 40%
      nodeStartupTimeout: 8m0s
      unhealthyNotReadyTimeout: 10m0s
      unhealthyUnknownTimeout: 10m0s
    oidc: {}
    rootVolumeSizeGB: 120
  metadata:
    preventDeletion: false
    servicePriority: highest
  podSecurityStandards:
    enforced: true
  providerSpecific:
    awsClusterRoleIdentityName: default
    flatcarAwsAccount: "706635527432"
internal:
  cgroupsv1: false
  kubernetesVersion: 1.25.16
  migration:
    apiBindPort: 6443
  nodePools:
    def00:
      customNodeLabels:
        - label=default
      instanceType: r6i.xlarge
      maxSize: 3
      minSize: 3
  sandboxContainerImage:
    name: giantswarm/pause
    registry: gsoci.azurecr.io
    tag: "3.9"
  teleport:
    enabled: true
    proxyAddr: teleport.giantswarm.io:443
    version: 14.1.3
kubectlImage:
  name: giantswarm/kubectl
  registry: gsoci.azurecr.io
  tag: 1.23.5
