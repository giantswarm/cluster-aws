{{/* Default values*/}}
{{/* https://github.com/giantswarm/cilium-app/blob/main/helm/cilium/values.yaml*/}}
{{- define "defaultCiliumHelmValues" }}
{{ if eq (required "global.connectivity.cilium.ipamMode is required"  .Values.global.connectivity.cilium.ipamMode) "eni" }}
# https://docs.cilium.io/en/v1.14/network/concepts/routing/#id5
ipam:
  mode: eni
eni:
  enabled: true
enableIPv4Masquerade: false

# (https://github.com/giantswarm/cluster-operator/blob/master/service/controller/resource/clusterconfigmap/desired.go#L235)
operator:
  extraArgs:
    - "--aws-release-excess-ips=true"
tunnel: disabled
cluster:
    # Used by cilium to tag ENIs it creates and be able to filter and clean them up.
    name: {{ include "resource.default.name" $ | quote }}
cni:
  customConf: true
  exclusive: true
  configMap: cilium-cni-configuration
extraEnv:
  - name: CNI_CONF_NAME
    value: "21-cilium.conflist"
{{ else if eq (required "global.connectivity.cilium.ipamMode is required"  .Values.global.connectivity.cilium.ipamMode) "kubernetes" }}
ipam:
  mode: kubernetes
{{ end }}

k8sServiceHost: api.{{ include "resource.default.name" $ }}.{{ .Values.global.connectivity.baseDomain }}
k8sServicePort: '{{ .Values.global.controlPlane.apiServerPort }}'
kubeProxyReplacement: strict
hubble:
  relay:
    enabled: true
    tolerations:
      - key: "node.cluster.x-k8s.io/uninitialized"
        operator: "Exists"
        effect: "NoSchedule"
  ui:
    tolerations:
      - key: "node.cluster.x-k8s.io/uninitialized"
        operator: "Exists"
        effect: "NoSchedule"
defaultPolicies:
  # Operators need to define their own network policies. Disable/undeploy the overarching allow rules.
  enabled: false
  remove: true

  tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
extraPolicies:
  allowEgressToCoreDNS:
    enabled: true
  allowEgressToProxy:
    enabled: {{ $.Values.global.connectivity.proxy.enabled }}
    httpProxy: {{ $.Values.global.connectivity.proxy.httpProxy | quote }}
    httpsProxy: {{ $.Values.global.connectivity.proxy.httpsProxy | quote }}
{{- end }}
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: {{ include "resource.default.name" $ }}-cilium
  namespace: {{ $.Release.Namespace }}
  annotations:
    cluster.giantswarm.io/description: "{{ .Values.global.metadata.description }}"
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  releaseName: cilium
  targetNamespace: kube-system
  storageNamespace: kube-system
  chart:
    spec:
      chart: cilium
      # used by renovate
      # repo: giantswarm/cilium-app
      version: 0.19.2
      sourceRef:
        kind: HelmRepository
        name: {{ include "resource.default.name" $ }}-default
  kubeConfig:
    secretRef:
      name: {{ include "resource.default.name" $ }}-kubeconfig
  interval: 5m
  install:
    remediation:
      retries: 30
  {{- $ciliumHelmValues := (include "defaultCiliumHelmValues" .) | fromYaml -}}
  {{- $customCiliumHelmValues := $.Values.global.apps.cilium.values -}}
  {{- if $customCiliumHelmValues }}
  {{- $ciliumHelmValues = merge (deepCopy $customCiliumHelmValues) $ciliumHelmValues -}}
  {{- end }}
  {{- if $ciliumHelmValues }}
  values: {{- $ciliumHelmValues | toYaml | nindent 4 }}
  {{- end }}
  {{- if $.Values.global.apps.cilium.extraConfigs }}
  valuesFrom:
    {{- range $config := $.Values.global.apps.cilium.extraConfigs }}
    - kind: {{ $config.kind }}
      name: {{ $config.name }}
      valuesKey: values
    {{- end }}
  {{- end }}
